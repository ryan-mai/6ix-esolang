"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[563],{7244:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"category/operators","title":"Operators","description":"No bizzy bap this gon check if you cappin \ud83e\udde2","source":"@site/docs/category/operators.md","sourceDirName":"category","slug":"/category/operators","permalink":"/6ix-esolang/docs/category/operators","draft":false,"unlisted":false,"editUrl":"https://github.com/ryan-mai/6ix-esolang/tree/Main/my-website/docs/category/operators.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Variable","permalink":"/6ix-esolang/docs/category/variables"},"next":{"title":"Functions","permalink":"/6ix-esolang/docs/category/functions"}}');var i=n(4848),o=n(8453);const l={sidebar_position:2},a="Operators",d={},c=[{value:"No bizzy bap this gon check if you cappin \ud83e\udde2",id:"no-bizzy-bap-this-gon-check-if-you-cappin-",level:4},{value:"Artihematic Operators",id:"artihematic-operators",level:3},{value:"Addition",id:"addition",level:4},{value:"Subtraction",id:"subtraction",level:4},{value:"Multiplication",id:"multiplication",level:4},{value:"Division",id:"division",level:4},{value:"Modulus",id:"modulus",level:4},{value:"Exponentiation",id:"exponentiation",level:4},{value:"Floor Division",id:"floor-division",level:4},{value:"Assignment Operators",id:"assignment-operators",level:3},{value:"Assignment",id:"assignment",level:4},{value:"Addition",id:"addition-1",level:4},{value:"Subtraction",id:"subtraction-1",level:4},{value:"Multiplication",id:"multiplication-1",level:4},{value:"Division",id:"division-1",level:4},{value:"Modulus",id:"modulus-1",level:4},{value:"Exponentiation",id:"exponentiation-1",level:4},{value:"Floor Division",id:"floor-division-1",level:4},{value:"Comparison Operators",id:"comparison-operators",level:3},{value:"Equal To",id:"equal-to",level:4},{value:"Not Equal To",id:"not-equal-to",level:4},{value:"Less Than",id:"less-than",level:4},{value:"Less Than or Equal To",id:"less-than-or-equal-to",level:4},{value:"Greater Than",id:"greater-than",level:4},{value:"Greater Than or Equal To",id:"greater-than-or-equal-to",level:4},{value:"Logical Operators",id:"logical-operators",level:3},{value:"And",id:"and",level:4},{value:"Or",id:"or",level:4},{value:"Not",id:"not",level:4},{value:"Identity Operators",id:"identity-operators",level:3},{value:"Is",id:"is",level:4},{value:"Is Not",id:"is-not",level:4}];function t(e){const r={code:"code",h1:"h1",h3:"h3",h4:"h4",header:"header",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.header,{children:(0,i.jsx)(r.h1,{id:"operators",children:"Operators"})}),"\n",(0,i.jsx)(r.h4,{id:"no-bizzy-bap-this-gon-check-if-you-cappin-",children:"No bizzy bap this gon check if you cappin \ud83e\udde2"}),"\n",(0,i.jsx)(r.h3,{id:"artihematic-operators",children:"Artihematic Operators"}),"\n",(0,i.jsx)(r.h4,{id:"addition",children:"Addition"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:">>> 2 addy 2\r\n4\n"})}),"\n",(0,i.jsxs)(r.p,{children:["The ",(0,i.jsx)("span",{style:{color:"aquamarine"},children:(0,i.jsx)(r.strong,{children:"addy"})})," operator performs addition (",(0,i.jsx)(r.code,{children:"+"}),"). ",(0,i.jsx)("br",{}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(r.h4,{id:"subtraction",children:"Subtraction"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:">>> 5 chopped 2\r\n10\n"})}),"\n",(0,i.jsxs)(r.p,{children:["The ",(0,i.jsx)("span",{style:{color:"aquamarine"},children:(0,i.jsx)(r.strong,{children:"chopped"})})," operator performs subtraction (",(0,i.jsx)(r.code,{children:"-"}),"). ",(0,i.jsx)("br",{}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(r.h4,{id:"multiplication",children:"Multiplication"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:">>> 3 hella 2\r\n6\n"})}),"\n",(0,i.jsxs)(r.p,{children:["The ",(0,i.jsx)("span",{style:{color:"aquamarine"},children:(0,i.jsx)(r.strong,{children:"hella"})})," operator performs multiplication (",(0,i.jsx)(r.code,{children:"*"}),"). ",(0,i.jsx)("br",{}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(r.h4,{id:"division",children:"Division"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:">>> 4 yute 2\r\n2.0\n"})}),"\n",(0,i.jsxs)(r.p,{children:["The ",(0,i.jsx)("span",{style:{color:"aquamarine"},children:(0,i.jsx)(r.strong,{children:"yute"})})," operator performs division (",(0,i.jsx)(r.code,{children:"/"}),"). ",(0,i.jsx)("br",{}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(r.h4,{id:"modulus",children:"Modulus"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:">>> 3 nize 2\r\n1\n"})}),"\n",(0,i.jsxs)(r.p,{children:["The ",(0,i.jsx)("span",{style:{color:"aquamarine"},children:(0,i.jsx)(r.strong,{children:"nize"})})," operator returns the remainder of a division (",(0,i.jsx)(r.code,{children:"%"}),"). ",(0,i.jsx)("br",{}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(r.h4,{id:"exponentiation",children:"Exponentiation"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:">>> 3 mans 2\r\n9\n"})}),"\n",(0,i.jsxs)(r.p,{children:["The ",(0,i.jsx)("span",{style:{color:"aquamarine"},children:(0,i.jsx)(r.strong,{children:"mans"})})," operator raise the first number to the power of the second (",(0,i.jsx)(r.code,{children:"**"}),"). ",(0,i.jsx)("br",{}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(r.h4,{id:"floor-division",children:"Floor Division"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:">>> 10 two-twos 5.5\r\n1.0\n"})}),"\n",(0,i.jsxs)(r.p,{children:["The ",(0,i.jsx)("span",{style:{color:"aquamarine"},children:(0,i.jsx)(r.strong,{children:"two-twos"})})," operator returns the integer part of the quotient (",(0,i.jsx)(r.code,{children:"//"}),"). ",(0,i.jsx)("br",{}),(0,i.jsx)("br",{}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(r.h3,{id:"assignment-operators",children:"Assignment Operators"}),"\n",(0,i.jsx)(r.h4,{id:"assignment",children:"Assignment"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:">>> croski hello fax 2\r\n>>> allow it hello\r\n2\n"})}),"\n",(0,i.jsxs)(r.p,{children:["The ",(0,i.jsx)("span",{style:{color:"aquamarine"},children:(0,i.jsx)(r.strong,{children:"fax"})})," operator sets a variable to a value (",(0,i.jsx)(r.code,{children:"="}),"). ",(0,i.jsx)("br",{}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(r.h4,{id:"addition-1",children:"Addition"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:">>> croski hello 4\r\n>>> croski hello money up 5\r\n>>> allow it hello\r\n9\n"})}),"\n",(0,i.jsxs)(r.p,{children:["The ",(0,i.jsx)("span",{style:{color:"aquamarine"},children:(0,i.jsx)(r.strong,{children:"money up"})})," operator increases a variable by a value (",(0,i.jsx)(r.code,{children:"+="}),"). ",(0,i.jsx)("br",{}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(r.h4,{id:"subtraction-1",children:"Subtraction"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"croski hello 4\r\ncroski hello funny up 5\r\nallow it hello\r\n\r\n>>> -1\n"})}),"\n",(0,i.jsxs)(r.p,{children:["The ",(0,i.jsx)("span",{style:{color:"aquamarine"},children:(0,i.jsx)(r.strong,{children:"funny up"})})," operator decreases a variable by a value (",(0,i.jsx)(r.code,{children:"-="}),"). ",(0,i.jsx)("br",{}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(r.h4,{id:"multiplication-1",children:"Multiplication"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"croski hello 4\r\ncroski hello cheesed 5\r\nallow it hello\r\n\r\n>>> 20\n"})}),"\n",(0,i.jsxs)(r.p,{children:["The ",(0,i.jsx)("span",{style:{color:"aquamarine"},children:(0,i.jsx)(r.strong,{children:"cheesed"})})," operator decreases a variable by a value (",(0,i.jsx)(r.code,{children:"*="}),"). ",(0,i.jsx)("br",{}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(r.h4,{id:"division-1",children:"Division"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"croski hello 20\r\ncroski hello mandem 4\r\nallow it hello\r\n\r\n>>> 5.0\n"})}),"\n",(0,i.jsxs)(r.p,{children:["The ",(0,i.jsx)("span",{style:{color:"aquamarine"},children:(0,i.jsx)(r.strong,{children:"mandem"})})," operator decreases a variable by a value (",(0,i.jsx)(r.code,{children:"/="}),"). ",(0,i.jsx)("br",{}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(r.h4,{id:"modulus-1",children:"Modulus"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"croski hello 20\r\ncroski hello steeze 4\r\nallow it hello\r\n\r\n>>> 0\n"})}),"\n",(0,i.jsxs)(r.p,{children:["The ",(0,i.jsx)("span",{style:{color:"aquamarine"},children:(0,i.jsx)(r.strong,{children:"steeze"})})," operator decreases a variable by a value (",(0,i.jsx)(r.code,{children:"%="}),"). ",(0,i.jsx)("br",{}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(r.h4,{id:"exponentiation-1",children:"Exponentiation"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"croski hello 2\r\ncroski hello dun 4\r\nallow it hello\r\n\r\n>>> 16\n"})}),"\n",(0,i.jsxs)(r.p,{children:["The ",(0,i.jsx)("span",{style:{color:"aquamarine"},children:(0,i.jsx)(r.strong,{children:"dun"})})," operator decreases a variable by a value (",(0,i.jsx)(r.code,{children:"**="}),"). ",(0,i.jsx)("br",{}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(r.h4,{id:"floor-division-1",children:"Floor Division"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"croski hello 10\r\ncroski hello bucktee 4\r\nallow it hello\r\n\r\n>>> 2\n"})}),"\n",(0,i.jsxs)(r.p,{children:["The ",(0,i.jsx)("span",{style:{color:"aquamarine"},children:(0,i.jsx)(r.strong,{children:"bucktee"})})," operator decreases a variable by a value (",(0,i.jsx)(r.code,{children:"//="}),"). ",(0,i.jsx)("br",{}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(r.h3,{id:"comparison-operators",children:"Comparison Operators"}),"\n",(0,i.jsx)(r.h4,{id:"equal-to",children:"Equal To"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"real sh 5 word 5\r\n>>> True\n"})}),"\n",(0,i.jsxs)(r.p,{children:["The ",(0,i.jsx)("span",{style:{color:"aquamarine"},children:(0,i.jsx)(r.strong,{children:"word"})})," operator returns a Boolean by comparing two similar values (",(0,i.jsx)(r.code,{children:"=="}),"). ",(0,i.jsx)("br",{}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(r.h4,{id:"not-equal-to",children:"Not Equal To"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"real sh 5 fam 4\r\n>>> True\n"})}),"\n",(0,i.jsxs)(r.p,{children:["The ",(0,i.jsx)("span",{style:{color:"aquamarine"},children:(0,i.jsx)(r.strong,{children:"fam"})})," operator returns a Boolean comparing two unlike values (",(0,i.jsx)(r.code,{children:"!="}),"). ",(0,i.jsx)("br",{}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(r.h4,{id:"less-than",children:"Less Than"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"real sh 2 wallahi 3\r\n>>> True\n"})}),"\n",(0,i.jsxs)(r.p,{children:["The ",(0,i.jsx)("span",{style:{color:"aquamarine"},children:(0,i.jsx)(r.strong,{children:"wallahi"})})," operator returns a Boolean if the first value is less than the second (",(0,i.jsx)(r.code,{children:"<"}),"). ",(0,i.jsx)("br",{}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(r.h4,{id:"less-than-or-equal-to",children:"Less Than or Equal To"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"real sh 4 reach 4\r\n>>> True\n"})}),"\n",(0,i.jsxs)(r.p,{children:["The ",(0,i.jsx)("span",{style:{color:"aquamarine"},children:(0,i.jsx)(r.strong,{children:"reach"})})," operator returns a Boolean if the first value is less than or equal to the second (",(0,i.jsx)(r.code,{children:"<="}),"). ",(0,i.jsx)("br",{}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(r.h4,{id:"greater-than",children:"Greater Than"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"real sh 7 bussin 2\r\n>>> True\n"})}),"\n",(0,i.jsxs)(r.p,{children:["The ",(0,i.jsx)("span",{style:{color:"aquamarine"},children:(0,i.jsx)(r.strong,{children:"bussin"})})," operator returns a Boolean if the first value is greater than the second (",(0,i.jsx)(r.code,{children:">"}),"). ",(0,i.jsx)("br",{}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(r.h4,{id:"greater-than-or-equal-to",children:"Greater Than or Equal To"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"real sh 8 lick 8\r\n>>> True\n"})}),"\n",(0,i.jsxs)(r.p,{children:["The ",(0,i.jsx)("span",{style:{color:"aquamarine"},children:(0,i.jsx)(r.strong,{children:"lick"})})," operator returns a Boolean if the first value is greater than or equal to the second (",(0,i.jsx)(r.code,{children:">="}),"). ",(0,i.jsx)("br",{}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(r.h3,{id:"logical-operators",children:"Logical Operators"}),"\n",(0,i.jsx)(r.h4,{id:"and",children:"And"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"real sh 1 based 0\r\n>>> False\n"})}),"\n",(0,i.jsxs)(r.p,{children:["The ",(0,i.jsx)("span",{style:{color:"aquamarine"},children:(0,i.jsx)(r.strong,{children:"based"})})," operator returns True if both values are truthy (",(0,i.jsx)(r.code,{children:"and"}),"). ",(0,i.jsx)("br",{}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(r.h4,{id:"or",children:"Or"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"real sh 1 ratio 0\r\n>>> True\n"})}),"\n",(0,i.jsxs)(r.p,{children:["The ",(0,i.jsx)("span",{style:{color:"aquamarine"},children:(0,i.jsx)(r.strong,{children:"ratio"})})," operator returns True if at least one value is truthy (",(0,i.jsx)(r.code,{children:"or"}),"). ",(0,i.jsx)("br",{}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(r.h4,{id:"not",children:"Not"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"real sh mid 0\r\n>>> True\r\nreal sh mid 1\r\n>>> False\n"})}),"\n",(0,i.jsxs)(r.p,{children:["The ",(0,i.jsx)("span",{style:{color:"aquamarine"},children:(0,i.jsx)(r.strong,{children:"mid"})})," operator returns the logical negation of a value (",(0,i.jsx)(r.code,{children:"not"}),"). ",(0,i.jsx)("br",{}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(r.h3,{id:"identity-operators",children:"Identity Operators"}),"\n",(0,i.jsx)(r.h4,{id:"is",children:"Is"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"croski a 5\r\ncroski b 5\r\nreal sh a like b\r\n>>> False\n"})}),"\n",(0,i.jsxs)(r.p,{children:["The ",(0,i.jsx)("span",{style:{color:"aquamarine"},children:(0,i.jsx)(r.strong,{children:"like"})})," operator checks if two variables are the same object (",(0,i.jsx)(r.code,{children:"is"}),"). ",(0,i.jsx)("br",{}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(r.h4,{id:"is-not",children:"Is Not"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"croski a 5\r\ncroski b 5\r\nreal sh a aint b\r\n>>> True\n"})}),"\n",(0,i.jsxs)(r.p,{children:["The ",(0,i.jsx)("span",{style:{color:"aquamarine"},children:(0,i.jsx)(r.strong,{children:"aint"})})," operator checks if two variables are not the same object (",(0,i.jsx)(r.code,{children:"is not"}),"). ",(0,i.jsx)("br",{}),(0,i.jsx)("br",{})]})]})}function h(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(t,{...e})}):t(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>l,x:()=>a});var s=n(6540);const i={},o=s.createContext(i);function l(e){const r=s.useContext(o);return s.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),s.createElement(o.Provider,{value:r},e.children)}}}]);